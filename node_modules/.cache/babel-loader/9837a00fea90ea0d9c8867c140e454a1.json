{"ast":null,"code":"var _jsxFileName = \"/Users/NicoleNg/weather-app/src/App.js\";\nimport React, { useState } from 'react';\nconst api = {\n  key: \"8f3e6e0f2c1d42f945a152075d5337a7\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      // GET REQUEST FROM API\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`) // GET JSON PROMISE\n      .then(res => res.json()) // SET WEATHER TO RESULT\n      // SET QUERY TO EMPTY STRING\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear(); // return `${day} ${month} ${date}, ${year}`\n\n    return `${month} ${date}, ${year}`;\n  };\n\n  const fahrenheitConvert = w => {\n    let converted = w * 1.8 + 32;\n    return Math.round(converted);\n  }; // , {weather.sys.country}\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app' : 'app',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, weather.name, \",\", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, fahrenheitConvert(weather.main.temp), \"\\xB0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, weather.weather[0].main), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"(\", weather.weather[0].description, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"humidity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Humidity: \", weather.main.humidity, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Wind: \", weather.wind.speed, \" mph\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feels-like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Feels Like: \", fahrenheitConvert(weather.main.feels_like), \"\\xB0F\"))) : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/NicoleNg/weather-app/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","fahrenheitConvert","w","converted","Math","round","main","temp","e","target","value","name","sys","country","Date","description","humidity","wind","speed","feels_like"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst api = {\n  key: \"8f3e6e0f2c1d42f945a152075d5337a7\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if(evt.key === \"Enter\") {\n      // GET REQUEST FROM API\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        // GET JSON PROMISE\n        .then(res => res.json())\n        // SET WEATHER TO RESULT\n        // SET QUERY TO EMPTY STRING\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n          \n    }\n  }\n\n  const dateBuilder = (d) => {\n\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \n    \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \n    \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    // return `${day} ${month} ${date}, ${year}`\n    return `${month} ${date}, ${year}`\n\n  }\n\n  const fahrenheitConvert = (w) => {\n    let converted = w * 1.8 + 32;\n    return Math.round(converted)\n  }\n\n  // , {weather.sys.country}\n\n  return (\n    <div className = \n    // IF WEATHER DEFINED, CHANGE BACKGROUND OF APP \n    // BASED ON THE TEMPERATURE\n      {(typeof weather.main != \"undefined\") ? \n      ((weather.main.temp > 16) ? 'app warm' : 'app')\n      : 'app'}>\n      <main>\n        <div className = \"search-box\">\n          <input \n            type = \"text\"\n            className = \"search-bar\"\n            placeholder = \"Search...\"\n            onChange = {e => setQuery(e.target.value)}\n            value = {query}\n            onKeyPress = {search}\n            />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className = \"location-box\">\n              <div className = \"location\">{weather.name},{weather.sys.country}</div>\n              <div className = \"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className = \"weather-box\">\n              <div className = \"temp\">\n                {fahrenheitConvert(weather.main.temp)}°F\n                \n              </div>\n              <div className = \"weather\">{weather.weather[0].main}</div>\n              <div className = \"weather-description\">({weather.weather[0].description})</div>\n              <div className = \"humidity\">Humidity: {weather.main.humidity}%</div>\n              <div className = \"wind\">Wind: {weather.wind.speed} mph</div>\n              <div className = \"feels-like\">Feels Like: {fahrenheitConvert(weather.main.feels_like)}°F</div>\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}